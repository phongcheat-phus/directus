version: "3.8"
services:
  directus-database:
    image: postgres:15
    container_name: directus_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/directus/database:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_interval: 5s
      start_period: 30s
    

  cache:
    image: redis:6
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_interval: 5s
      start_period: 30s
  directus:
    image: directus/directus:11.3.5
    build: .
    ports:
      - 8055:8055
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      directus-database:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      SECRET: ${SECRET}
      DB_CLIENT: ${DB_CLIENT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      CACHE_ENABLED: ${CACHE_ENABLED}
      CACHE_AUTO_PURGE: ${CACHE_AUTO_PURGE}
      CACHE_STORE: ${CACHE_STORE}
      REDIS: ${REDIS}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}

  api:
    build:
      context: ./api
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
    depends_on:
      directus-database:
        condition: service_healthy

  kong-database:
    image: postgres:15
    container_name: kong_postgres
    restart: always
    environment:
      KONG_POSTGRES_USER: ${KONG_POSTGRES_USER}
      KONG_POSTGRES_PASSWORD: ${KONG_POSTGRES_PASSWORD}
      KONG_POSTGRES_DB: ${KONG_POSTGRES_DB}
    volumes:
      - ./data/kong/database:/var/lib/postgresql/data
    expose:
      - 5432

  kong-migration:
    image: kong/kong-gateway:3.9.0.1
    command: "kong migrations bootstrap"
    restart: always
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    depends_on:
      - kong-database

  kong:
    image: kong/kong-gateway:3.9.0.1
    container_name: kong-gateway
    restart: always
    ports:
      - "8001:8001"
      - "8000:8000"
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration


  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga_db"
    restart: always
    depends_on:
      - kong-database
    expose:
      - 5432

  konga:
    image: pantsel/konga:next
    container_name: konga_ui
    restart: always
    ports:
      - "1337:1337"
    environment:
      DB_ADAPTER: ${DB_ADAPTER}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - konga-prepare
  
  
    


      
